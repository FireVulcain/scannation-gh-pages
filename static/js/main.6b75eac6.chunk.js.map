{"version":3,"sources":["components/Session/contex.js","config/Firebase/context.js","config/Firebase/Firebase.js","config/Firebase/index.js","components/Session/withAuthentication.js","components/Session/withAuthorization.js","constants/routes.js","components/auth/SignOut/index.js","components/layouts/Navbar.js","components/layouts/Head.js","components/home/LastestRelease.js","components/home/LastestNews.js","components/planning/NextRelease.js","pages/Home.js","pages/Planning.js","pages/MangasList.js","components/auth/Signup/index.js","constants/roles.js","components/auth/PasswordForget/index.js","components/auth/SignIn/index.js","components/auth/PasswordChange/index.js","components/auth/Account/index.js","components/Admin/index.js","pages/upload/UploadChapter.js","pages/upload/UploadManga.js","pages/upload/UploadPlanning.js","pages/upload/UploadNews.js","components/mangas/MangaInfo.js","pages/MangaListChapters.js","components/helpers/ScrollTop.js","pages/MangaReadChapter.js","pages/delete/DeleteData.js","App.js","serviceWorker.js","index.js","assets/images/logo.png"],"names":["AuthUserContext","React","createContext","FirebaseContext","withFirebase","Component","props","Consumer","firebase","firebaseConfig","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Firebase","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","onAuthUserListener","next","fallback","onAuthStateChanged","authUser","user","uid","once","then","snapshot","dbUser","val","roles","db","ref","users","initializeApp","this","database","firestore","storage","withAuthentication","WithAuthentication","state","listener","setState","Provider","value","withAuthorization","condition","WithAuthorization","history","push","compose","withRouter","Button","onClick","Navbar","handleClick","event","anchorEl","currentTarget","handleClose","classes","Box","className","container","Grid","alignItems","menu","item","md","to","logo","justify","root","component","Link","display","editButton","Fab","fab","size","color","Menu","anchorOrigin","vertical","horizontal","getContentAnchorEl","open","Boolean","onClose","MenuItem","SignOut","withStyles","theme","marginLeft","spacing","background","boxShadow","textTransform","fontSize","maxWidth","width","margin","position","minHeight","height","top","backgroundSize","verticalAlign","marginRight","Head","pageMeta","children","title","LastestRelease","componentDidMount","mangas","chapters","collection","get","results","empty","noManga","forEach","doc","id","data","limit","orderBy","docSnaps","loading","mangaId","mangaImage","releases","Typography","variant","CircularProgress","Object","values","map","release","i","key","src","alt","chapter","titleChapter","LastestNews","formatDate","date","console","log","news","noNews","newInfo","Date","seconds","day","getDate","month","getMonth","homeNews","actuInfo","borderBottom","padding","fontWeight","textOverflow","overflow","flexShrink","whiteSpace","NextRelease","planningManga","planing","currentStatus","classStatus","status","cleaning","translate","lastCheck","awaiting","progressName","mangaName","LinearProgress","colorPrimary","bar","barColorPrimary","backgroundColor","borderRadius","marginBottom","Home","Planning","MangasList","entries","manga","lastChapter","INITIAL_STATE","username","passwordOne","passwordTwo","isAdmin","error","SignUpFormBase","onSubmit","set","catch","code","message","preventDefault","onChange","target","name","onChangeCheckbox","checked","isInvalid","TextField","label","type","disabled","SignUpLink","SignUpForm","SignUpPage","PasswordForgetFormBase","PasswordForgetLink","PasswordForgetPage","PasswordForgetForm","SignInFormBase","SignInForm","SignInPage","PasswordChangeForm","AccountPage","xs","PasswordChange","AdminPage","on","usersObject","usersList","keys","off","UserList","images","url","selectManga","selectChapter","selectTitle","isLastChapter","errors","UploadChapter","titleCase","str","splitStr","toLowerCase","split","length","charAt","toUpperCase","substring","join","handleImage","e","files","handleChange","handleChecked","handleValidation","formIsValid","isNaN","handleUpload","promises","pathUploadImg","image","uploadTask","put","snap","getDownloadURL","downloadURL","pageImg","pageNumber","Promise","all","sort","a","b","parseInt","pageCount","pages","createdAt","update","planningRef","docSnapshot","exists","replace","fileInput","noValidate","autoComplete","FormControl","formControl","InputLabel","select","htmlFor","Select","native","option","FormHelperText","helperText","accept","multiple","input","uploadImg","FormControlLabel","control","Checkbox","checkbox","startIcon","cursor","manga_name","synopsis","UploadManga","formatedMangaName","resume","multiline","rows","selectStatus","UploadPlanning","actu_info","UploadNews","MangaInfo","Card","mangaInfo","CardMedia","media","CardContent","MangaListChapters","match","params","listChapters","where","noChapter","listChapter","useStyles","makeStyles","bottom","right","ScrollTop","trigger","useScrollTrigger","disableHysteresis","threshold","Zoom","in","anchor","ownerDocument","document","querySelector","scrollIntoView","behavior","block","MangaReadChapter","nbChapter","nb_chapter","chapterData","isImgLoaded","Toolbar","button","datas","page","loader","aria-label","paddingLeft","paddingBottom","justifyContent","DeleteData","displayChapters","removeChapterImg","chapterInfo","child","listAll","items","fileRef","delete","removeMangaImg","handleDeleteChapter","handleDeleteManga","Collapse","timeout","unmountOnExit","ListItem","collapse","IconButton","deleteIcon","collapsedItem","list","index","Container","exact","path","SignIn","SignUp","window","location","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.6b75eac6.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst AuthUserContext = React.createContext(null);\r\n\r\nexport default AuthUserContext;\r\n","import React from \"react\";\r\nconst FirebaseContext = React.createContext(null);\r\nexport const withFirebase = (Component) => (props) => (\r\n    <FirebaseContext.Consumer>{(firebase) => <Component {...props} firebase={firebase} />}</FirebaseContext.Consumer>\r\n);\r\nexport default FirebaseContext;\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/database\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APP_ID,\r\n    measurementId: process.env.REACT_APP_MEASUREMENT_ID\r\n};\r\n\r\nclass Firebase {\r\n    constructor() {\r\n        firebase.initializeApp(firebaseConfig);\r\n        this.auth = firebase.auth();\r\n        this.db = firebase.database();\r\n        this.firestore = firebase.firestore();\r\n        this.storage = firebase.storage();\r\n    }\r\n\r\n    // Auth API\r\n    doCreateUserWithEmailAndPassword = (email, password) => this.auth.createUserWithEmailAndPassword(email, password);\r\n    doSignInWithEmailAndPassword = (email, password) => this.auth.signInWithEmailAndPassword(email, password);\r\n    doSignOut = () => this.auth.signOut();\r\n    doPasswordReset = (email) => this.auth.sendPasswordResetEmail(email);\r\n    doPasswordUpdate = (password) => this.auth.currentUser.updatePassword(password);\r\n\r\n    // Merge Auth and DB user\r\n\r\n    onAuthUserListener = (next, fallback) =>\r\n        this.auth.onAuthStateChanged((authUser) => {\r\n            if (authUser) {\r\n                this.user(authUser.uid)\r\n                    .once(\"value\")\r\n                    .then((snapshot) => {\r\n                        const dbUser = snapshot.val();\r\n                        // default empty roles\r\n                        if (!dbUser.roles) {\r\n                            dbUser.roles = {};\r\n                        }\r\n                        // merge auth and db user\r\n                        authUser = {\r\n                            uid: authUser.uid,\r\n                            email: authUser.email,\r\n                            ...dbUser\r\n                        };\r\n                        next(authUser);\r\n                    });\r\n            } else {\r\n                fallback();\r\n            }\r\n        });\r\n\r\n    //user api\r\n    user = (uid) => this.db.ref(`users/${uid}`);\r\n    users = () => this.db.ref(\"users\");\r\n}\r\n\r\nexport default Firebase;\r\n","import FirebaseContext, { withFirebase } from \"./context\";\r\nimport Firebase from \"./Firebase\";\r\nexport default Firebase;\r\nexport { FirebaseContext, withFirebase };\r\n","import React from \"react\";\r\n\r\nimport AuthUserContext from \"./contex\";\r\nimport { withFirebase } from \"./../../config/Firebase\";\r\n\r\nconst withAuthentication = (Component) => {\r\n    class WithAuthentication extends React.Component {\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = {\r\n                authUser: null\r\n            };\r\n        }\r\n        componentDidMount() {\r\n            this.listener = this.props.firebase.onAuthUserListener(\r\n                (authUser) => {\r\n                    this.setState({ authUser });\r\n                },\r\n                () => {\r\n                    this.setState({ authUser: null });\r\n                }\r\n            );\r\n        }\r\n        componentWillUnmount() {\r\n            this.listener();\r\n        }\r\n        render() {\r\n            return (\r\n                <AuthUserContext.Provider value={this.state.authUser}>\r\n                    <Component {...this.props} />\r\n                </AuthUserContext.Provider>\r\n            );\r\n        }\r\n    }\r\n    return withFirebase(WithAuthentication);\r\n};\r\nexport default withAuthentication;\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { compose } from \"recompose\";\r\nimport AuthUserContext from \"./contex\";\r\nimport { withFirebase } from \"./../../config/Firebase\";\r\nimport * as ROUTES from \"./../../constants/routes\";\r\n\r\nconst withAuthorization = (condition) => (Component) => {\r\n    class WithAuthorization extends React.Component {\r\n        componentDidMount() {\r\n            this.listener = this.props.firebase.onAuthUserListener(\r\n                (authUser) => {\r\n                    if (!condition(authUser)) {\r\n                        this.props.history.push(ROUTES.SIGN_IN);\r\n                    }\r\n                },\r\n                () => this.props.history.push(ROUTES.SIGN_IN)\r\n            );\r\n        }\r\n        componentWillUnmount() {\r\n            this.listener();\r\n        }\r\n        render() {\r\n            return <AuthUserContext.Consumer>{(authUser) => (condition(authUser) ? <Component {...this.props} /> : null)}</AuthUserContext.Consumer>;\r\n        }\r\n    }\r\n    return compose(withRouter, withFirebase)(WithAuthorization);\r\n};\r\nexport default withAuthorization;\r\n","export const HOME = \"/\";\r\nexport const SIGN_UP = \"/signup\";\r\nexport const SIGN_IN = \"/signin\";\r\nexport const PASSWORD_FORGET = \"/pw-forget\";\r\nexport const LIST_MANGAS = \"/mangas\";\r\nexport const PLANNING = \"/planning\";\r\nexport const ACCOUNT = \"/account\";\r\nexport const ADMIN = \"/admin\";\r\nexport const UPLOAD_MANGA = \"/upload/upload_manga\";\r\nexport const UPLOAD_CHAPTER = \"/upload/upload_chapter\";\r\nexport const UPLOAD_PLANNING = \"/upload/upload_planning\";\r\nexport const UPLOAD_NEWS = \"/upload/upload_news\";\r\nexport const DELETE_DATA = \"/delete/delete_data\";\r\n\r\nexport const LIST_MANGA_CHAPTERS = \"/:manga_name\";\r\nexport const READ_MANGA_CHAPTER = \"/:manga_name/:nb_chapter\";\r\n","import React from \"react\";\r\nimport { withFirebase } from \"./../../../config/Firebase\";\r\n\r\n//Material UI\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst SignOutButton = ({ firebase }) => <Button onClick={firebase.doSignOut}>Déconnexion</Button>;\r\nexport default withFirebase(SignOutButton);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SignOutButton from \"./../auth/SignOut\";\r\nimport * as ROLES from \"./../../constants/roles\";\r\n\r\n// routes\r\nimport * as ROUTES from \"./../../constants/routes\";\r\n\r\n// Auth\r\nimport { AuthUserContext } from \"./../Session\";\r\n\r\n//Material-ui stuff\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\n//img\r\nimport logo from \"./../../assets/images/logo.png\";\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        \"& > * + *\": {\r\n            marginLeft: theme.spacing(2)\r\n        }\r\n    },\r\n    container: {\r\n        background: \"#1c252d\",\r\n        boxShadow: \"0 2px 4px -1px rgba(0,0,0,0.34),0 2px 2px -2px rgba(0,0,0,0.26),0 1px 4px 0 rgba(0,0,0,0.28)\",\r\n        \"& *\": {\r\n            color: \"#fff\",\r\n            textTransform: \"none\"\r\n        },\r\n        \"& a, & button\": {\r\n            fontSize: \"18px\"\r\n        }\r\n    },\r\n    menu: {\r\n        maxWidth: \"1325px\",\r\n        width: \"100%\",\r\n        margin: \"0 auto\",\r\n        position: \"relative\",\r\n        minHeight: \"70px\"\r\n    },\r\n    fab: {\r\n        background: \"transparent\",\r\n        boxShadow: \"none\",\r\n        \"&:hover\": {\r\n            background: \"transparent\"\r\n        }\r\n    },\r\n    logo: {\r\n        display: \"inline-block\",\r\n        width: \"95px\",\r\n        height: \"80px\",\r\n        position: \"absolute\",\r\n        top: \"0\",\r\n        background: `url(${logo}) no-repeat`,\r\n        backgroundSize: \"contain\"\r\n    },\r\n    editButton: {\r\n        verticalAlign: \"middle\",\r\n        marginRight: \"5px\"\r\n    }\r\n});\r\nclass Navbar extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            anchorEl: null\r\n        };\r\n    }\r\n    handleClick = (event) => {\r\n        this.setState({ anchorEl: event.currentTarget });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ anchorEl: null });\r\n    };\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <AuthUserContext.Consumer>\r\n                {(authUser) => {\r\n                    return (\r\n                        <Box className={classes.container}>\r\n                            <Grid container alignItems=\"center\" className={classes.menu}>\r\n                                <Grid item md={1}>\r\n                                    <Link to={ROUTES.HOME} className={classes.logo}></Link>\r\n                                </Grid>\r\n                                <Grid container justify=\"space-between\" item md={10}>\r\n                                    <Box className={classes.root}>\r\n                                        <Button component={Link} to={ROUTES.HOME}>\r\n                                            Accueil\r\n                                        </Button>\r\n                                        <Button component={Link} to={ROUTES.PLANNING}>\r\n                                            Planning\r\n                                        </Button>\r\n                                        <Button component={Link} to={ROUTES.LIST_MANGAS}>\r\n                                            Mangas\r\n                                        </Button>\r\n                                    </Box>\r\n                                    {!authUser ? (\r\n                                        <Box>\r\n                                            <Button component={Link} to={ROUTES.SIGN_IN}>\r\n                                                Connexion\r\n                                            </Button>\r\n                                            <Button component={Link} to={ROUTES.SIGN_UP}>\r\n                                                Inscription\r\n                                            </Button>\r\n                                        </Box>\r\n                                    ) : (\r\n                                        <Box display=\"flex\">\r\n                                            {!!authUser.roles[ROLES.ADMIN] && (\r\n                                                <Box>\r\n                                                    <Link className={classes.editButton} to={ROUTES.DELETE_DATA}>\r\n                                                        <EditIcon />\r\n                                                    </Link>\r\n                                                    <Fab className={classes.fab} onClick={this.handleClick} size=\"small\" color=\"primary\">\r\n                                                        <AddIcon />\r\n                                                    </Fab>\r\n                                                    <Menu\r\n                                                        anchorOrigin={{\r\n                                                            vertical: \"bottom\",\r\n                                                            horizontal: \"left\"\r\n                                                        }}\r\n                                                        getContentAnchorEl={null}\r\n                                                        anchorEl={this.state.anchorEl}\r\n                                                        open={Boolean(this.state.anchorEl)}\r\n                                                        onClose={this.handleClose}\r\n                                                    >\r\n                                                        <MenuItem component={Link} to={ROUTES.UPLOAD_MANGA} onClick={this.handleClose}>\r\n                                                            Manga\r\n                                                        </MenuItem>\r\n                                                        <MenuItem component={Link} to={ROUTES.UPLOAD_CHAPTER} onClick={this.handleClose}>\r\n                                                            Chapitre\r\n                                                        </MenuItem>\r\n                                                        <MenuItem component={Link} to={ROUTES.UPLOAD_PLANNING} onClick={this.handleClose}>\r\n                                                            Planning\r\n                                                        </MenuItem>\r\n                                                        <MenuItem component={Link} to={ROUTES.UPLOAD_NEWS} onClick={this.handleClose}>\r\n                                                            Actualités\r\n                                                        </MenuItem>\r\n                                                    </Menu>\r\n                                                </Box>\r\n                                            )}\r\n                                            <Button component={Link} to={ROUTES.ACCOUNT}>\r\n                                                Compte\r\n                                            </Button>\r\n                                            <SignOutButton />\r\n                                        </Box>\r\n                                    )}\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Box>\r\n                    );\r\n                }}\r\n            </AuthUserContext.Consumer>\r\n        );\r\n    }\r\n}\r\n\r\nNavbar.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Navbar);\r\n","import React from \"react\";\r\nimport Helmet from \"react-helmet\";\r\n\r\nconst Head = ({ pageMeta, children }) => (\r\n    <>\r\n        <Helmet>\r\n            <title>{`${pageMeta.title}`}</title>\r\n\r\n            {/* The charset, viewport and author meta tags will always have the same value, so we hard code them! */}\r\n            {/* <meta charset=\"UTF-8\" /> */}\r\n            {/* <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /> */}\r\n            {/* <meta name=\"author\" content=\"Bob Trustly\" /> */}\r\n\r\n            {/* The rest we set dynamically with props */}\r\n            {/* <meta name=\"description\" content={pageMeta.description} /> */}\r\n\r\n            {/* We pass an array of keywords, and then we use the Array.join method to convert them to a string where each keyword is separated by a comma */}\r\n            {/* <meta name=\"keywords\" content={pageMeta.keywords.join(',')} /> */}\r\n        </Helmet>\r\n        {children}\r\n    </>\r\n);\r\n\r\nexport default Head;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n// Firebase\r\nimport { withFirebase } from \"./../../config/Firebase\";\r\n\r\n//Material-ui\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst styles = {};\r\n\r\nclass LastestRelease extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            releases: [],\r\n            loading: true,\r\n            noManga: false\r\n        };\r\n    }\r\n    componentDidMount = () => {\r\n        const firestore = this.props.firebase.firestore;\r\n        let mangas = {};\r\n        let chapters = {};\r\n        firestore\r\n            .collection(\"/mangas\")\r\n            .get()\r\n            .then((results) => {\r\n                if (!results.empty) {\r\n                    results.forEach((doc) => {\r\n                        mangas[doc.id] = doc.data();\r\n                    });\r\n                } else {\r\n                    this.setState({ noManga: results.empty });\r\n                    return;\r\n                }\r\n            })\r\n            .then(() => {\r\n                firestore\r\n                    .collection(\"/chapters\")\r\n                    .limit(20)\r\n                    .orderBy(\"createdAt\", \"desc\")\r\n                    .get()\r\n                    .then((docSnaps) => {\r\n                        if (!docSnaps.empty) {\r\n                            docSnaps.forEach((doc) => {\r\n                                chapters[doc.id] = doc.data();\r\n                                chapters[doc.id].title = mangas[doc.data().mangaId].title;\r\n                                chapters[doc.id].mangaImage = mangas[doc.data().mangaId].mangaImage;\r\n                            });\r\n                            this.setState({ releases: chapters, loading: false });\r\n                        } else {\r\n                            this.setState({ noManga: docSnaps.empty, loading: false });\r\n                        }\r\n                    });\r\n            });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Box>\r\n                <Grid item md={12}>\r\n                    <Typography variant=\"h5\" component=\"h3\" className=\"titlePage\">\r\n                        Les dernières sorties\r\n                    </Typography>\r\n                </Grid>\r\n                {this.state.noManga ? (\r\n                    <Grid item md={12}>\r\n                        <Typography variant=\"body1\" component=\"p\" color=\"secondary\">\r\n                            Pas de chapitre actuellement sur le site\r\n                        </Typography>\r\n                    </Grid>\r\n                ) : (\r\n                    <Grid item md={12} className=\"containerInfo\">\r\n                        {this.state.loading ? (\r\n                            <CircularProgress size={30} className=\"loadingInfo\" />\r\n                        ) : (\r\n                            Object.values(this.state.releases).map((release, i) => {\r\n                                return (\r\n                                    <Link key={i} to={release.mangaId} className={i < 2 ? \"newChapter recentChapter\" : \"newChapter notRecent\"}>\r\n                                        <Box className=\"newChapterImg\">\r\n                                            <img src={release.mangaImage} alt=\"\" />\r\n                                        </Box>\r\n                                        <Box>\r\n                                            <Typography variant=\"body1\" component=\"p\" className=\"mangaTitle\">\r\n                                                {release.title} {release.chapter}\r\n                                            </Typography>\r\n                                            <Typography variant=\"body1\" component=\"p\">\r\n                                                {release.titleChapter}\r\n                                            </Typography>\r\n                                        </Box>\r\n                                    </Link>\r\n                                );\r\n                            })\r\n                        )}\r\n                    </Grid>\r\n                )}\r\n            </Box>\r\n        );\r\n    }\r\n}\r\n\r\nLastestRelease.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(withFirebase(LastestRelease));\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n// Firebase\r\nimport { withFirebase } from \"./../../config/Firebase\";\r\n\r\n//Material-ui\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst styles = {\r\n    homeNews: {\r\n        background: \"#283440\",\r\n        color: \"#fff\",\r\n        borderBottom: \"1px solid #3e4b5b\",\r\n        padding: \"3px 20px\",\r\n        minHeight: \"45px\",\r\n\r\n        \"& p:not(:last-child)\": {\r\n            marginRight: \"20px\"\r\n        }\r\n    },\r\n    title: {\r\n        fontWeight: \"bold\",\r\n        textOverflow: \"ellipsis\",\r\n        overflow: \"hidden\",\r\n        width: \"100px\",\r\n        flexShrink: \"0\",\r\n        whiteSpace: \"nowrap\"\r\n    },\r\n    date: {\r\n        fontWeight: \"bold\",\r\n        width: \"45px\"\r\n    }\r\n};\r\n\r\nclass LastestNews extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            news: [],\r\n            loading: true,\r\n            noNews: false\r\n        };\r\n    }\r\n    formatDate = (date) => {\r\n        console.log(date);\r\n    };\r\n    componentDidMount = () => {\r\n        const firestore = this.props.firebase.firestore;\r\n        let news = {};\r\n        firestore\r\n            .collection(\"/news\")\r\n            .limit(4)\r\n            .orderBy(\"date\", \"desc\")\r\n            .get()\r\n            .then((results) => {\r\n                if (!results.empty) {\r\n                    results.forEach((doc) => {\r\n                        news[doc.id] = doc.data();\r\n                    });\r\n                } else {\r\n                    this.setState({ noNews: results.empty });\r\n                    return;\r\n                }\r\n            })\r\n            .then(() => {\r\n                this.setState({ news: news, loading: false });\r\n            });\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <Box>\r\n                <Grid item md={12}>\r\n                    <Typography variant=\"h5\" component=\"h3\" className=\"titlePage\">\r\n                        Les dernières actus\r\n                    </Typography>\r\n                </Grid>\r\n                {this.state.noNews ? (\r\n                    <Grid item md={12}>\r\n                        <Typography variant=\"body1\" component=\"p\" color=\"secondary\">\r\n                            Pas de news actuellement sur le site\r\n                        </Typography>\r\n                    </Grid>\r\n                ) : (\r\n                    <Grid item md={12} className=\"containerInfo\">\r\n                        {this.state.loading ? (\r\n                            <CircularProgress size={30} className=\"loadingInfo\" />\r\n                        ) : (\r\n                            Object.values(this.state.news).map((newInfo, i) => {\r\n                                let date = new Date(newInfo.date.seconds * 1000);\r\n                                let day = date.getDate();\r\n                                let month = date.getMonth() + 1;\r\n                                return (\r\n                                    <Box key={i} display=\"flex\" alignItems=\"center\" className={classes.homeNews}>\r\n                                        <Typography className={classes.date}>\r\n                                            {day}/{month}\r\n                                        </Typography>\r\n                                        <Typography className={classes.title}>{newInfo.title}</Typography>\r\n                                        <Typography>{newInfo.actuInfo}</Typography>\r\n                                    </Box>\r\n                                );\r\n                            })\r\n                        )}\r\n                    </Grid>\r\n                )}\r\n            </Box>\r\n        );\r\n    }\r\n}\r\n\r\nLastestNews.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(withFirebase(LastestNews));\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// firebase\r\nimport { withFirebase } from \"./../../config/Firebase\";\r\n\r\n//Material ui\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst styles = {\r\n    bar: {\r\n        backgroundColor: \"#929292\",\r\n        height: \"10px\",\r\n        borderRadius: \"100px\"\r\n    },\r\n    awaiting: {\r\n        backgroundColor: \"#929292\",\r\n        borderRadius: \"100px\"\r\n    },\r\n    cleaning: {\r\n        backgroundColor: \"#E36D63\",\r\n        borderRadius: \"100px\"\r\n    },\r\n    translate: {\r\n        backgroundColor: \"#E39565\",\r\n        borderRadius: \"100px\"\r\n    },\r\n    lastCheck: {\r\n        backgroundColor: \"#D4E369\",\r\n        borderRadius: \"100px\"\r\n    },\r\n    progressName: {\r\n        color: \"#fff\",\r\n        fontSize: \"18px\",\r\n        marginBottom: \"5px\",\r\n        fontWeight: \"bold\",\r\n\r\n        \"& span\": {\r\n            color: \"#fff\",\r\n            fontSize: \"14px\",\r\n            padding: \"2px 10px\",\r\n            fontWeight: \"normal\"\r\n        }\r\n    }\r\n};\r\nclass NextRelease extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            mangas: {},\r\n            planningManga: {},\r\n            loading: true\r\n        };\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        const firestore = this.props.firebase.firestore;\r\n        let planningManga = {};\r\n        let mangas = {};\r\n\r\n        firestore\r\n            .collection(\"/mangas\")\r\n            .get()\r\n            .then((results) => {\r\n                results.forEach((doc) => {\r\n                    mangas[doc.id] = doc.data();\r\n                });\r\n            })\r\n            .then(() => {\r\n                firestore\r\n                    .collection(\"/planning\")\r\n                    .orderBy(\"mangaName\")\r\n                    .get()\r\n                    .then((results) => {\r\n                        results.forEach((doc) => {\r\n                            planningManga[doc.id] = doc.data();\r\n                            planningManga[doc.id].mangaImage = mangas[doc.data().mangaId].mangaImage;\r\n                        });\r\n                        return this.setState({ planningManga, loading: false });\r\n                    });\r\n            });\r\n    };\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <Box>\r\n                <Grid item md={12}>\r\n                    <Typography variant=\"h5\" component=\"h3\" className=\"titlePage\">\r\n                        Les prochaines sorties\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item md={12} className=\"containerInfo\">\r\n                    {this.state.loading ? (\r\n                        <CircularProgress size={30} className=\"loadingInfo\" />\r\n                    ) : (\r\n                        Object.values(this.state.planningManga).map((planing, i) => {\r\n                            let currentStatus = \"\";\r\n                            let classStatus = \"\";\r\n                            switch (planing.status) {\r\n                                case 25:\r\n                                    currentStatus = \"Clean des pages\";\r\n                                    classStatus = classes.cleaning;\r\n                                    break;\r\n                                case 50:\r\n                                    currentStatus = \"Traduction en cours\";\r\n                                    classStatus = classes.translate;\r\n                                    break;\r\n                                case 100:\r\n                                    currentStatus = \"Dernier check\";\r\n                                    classStatus = classes.lastCheck;\r\n                                    break;\r\n                                case 0:\r\n                                default:\r\n                                    currentStatus = \"En attente du prochain chapitre\";\r\n                                    classStatus = classes.awaiting;\r\n                                    break;\r\n                            }\r\n                            return (\r\n                                <Link key={i} to={planing.mangaId} className=\"newChapter\">\r\n                                    <Box className=\"newChapterImg\">\r\n                                        <img src={planing.mangaImage} alt=\"\" />\r\n                                    </Box>\r\n\r\n                                    <Box>\r\n                                        <Typography className={classes.progressName} variant=\"body1\" component=\"p\">\r\n                                            {planing.mangaName} : <span className={classStatus}>{currentStatus}</span>\r\n                                        </Typography>\r\n                                        <LinearProgress\r\n                                            classes={{ colorPrimary: classes.bar, barColorPrimary: classStatus }}\r\n                                            variant=\"determinate\"\r\n                                            value={planing.status}\r\n                                        />\r\n                                    </Box>\r\n                                </Link>\r\n                            );\r\n                        })\r\n                    )}\r\n                </Grid>\r\n            </Box>\r\n        );\r\n    }\r\n}\r\n\r\nNextRelease.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\nexport default withStyles(styles)(withFirebase(NextRelease));\r\n","import React, { Component } from \"react\";\r\nimport Head from \"./../components/layouts/Head\";\r\n\r\n//Component\r\nimport LastestRelease from \"./../components/home/LastestRelease\";\r\nimport LastestNews from \"./../components/home/LastestNews\";\r\nimport NextRelease from \"./../components/planning/NextRelease\";\r\n\r\n//Material-ui stuff\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nclass Home extends Component {\r\n    render() {\r\n        return (\r\n            <Head pageMeta={{ title: \"ScanNation France | Scans de manga en ligne\" }}>\r\n                <Grid container spacing={2} className=\"main\">\r\n                    <Grid item md={6}>\r\n                        <LastestRelease />\r\n                    </Grid>\r\n                    <Grid item md={6}>\r\n                        <LastestNews />\r\n                        <NextRelease />\r\n                    </Grid>\r\n                </Grid>\r\n            </Head>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\nimport Head from \"./../components/layouts/Head\";\r\nimport NextRelease from \"./../components/planning/NextRelease\";\r\n\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nclass Planning extends Component {\r\n    render() {\r\n        return (\r\n            <Head pageMeta={{ title: \"Les prochaines sorties | ScanNation France\" }}>\r\n                <Box className=\"main\">\r\n                    <NextRelease />\r\n                </Box>\r\n            </Head>\r\n        );\r\n    }\r\n}\r\nexport default Planning;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Head from \"./../components/layouts/Head\";\r\n\r\nimport { withFirebase } from \"./../config/Firebase\";\r\n\r\n//Material-ui\r\n// import { withStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nclass MangasList extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            mangas: {},\r\n            loading: true\r\n        };\r\n    }\r\n    componentDidMount = () => {\r\n        let mangas = {};\r\n        let firestore = this.props.firebase.firestore;\r\n        firestore\r\n            .collection(\"mangas\")\r\n            .get()\r\n            .then((snapshot) => {\r\n                snapshot.forEach((doc) => {\r\n                    mangas[doc.id] = doc.data();\r\n                });\r\n            })\r\n            .then(() => {\r\n                this.setState({ mangas, loading: false });\r\n            });\r\n    };\r\n    render() {\r\n        return (\r\n            <Head pageMeta={{ title: \"Liste de nos mangas | ScanNation France \" }}>\r\n                <Grid container className=\"main\">\r\n                    <Grid item md={12}>\r\n                        <Typography variant=\"h5\" component=\"h3\" className=\"titlePage\">\r\n                            Liste des mangas sur le site\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item md={12} className=\"containerInfo\">\r\n                        {this.state.loading ? (\r\n                            <CircularProgress size={30} className=\"loadingInfo\" />\r\n                        ) : (\r\n                            Object.entries(this.state.mangas).map((manga, i) => {\r\n                                return (\r\n                                    <Link key={i} to={manga[0]} className=\"newChapter\">\r\n                                        <Box className=\"newChapterImg\">\r\n                                            <img src={manga[1].mangaImage} alt=\"\" />\r\n                                        </Box>\r\n                                        <Box>\r\n                                            <Typography variant=\"body1\" component=\"p\">\r\n                                                {manga[1].title}\r\n                                            </Typography>\r\n                                            <Typography variant=\"body1\" component=\"span\">\r\n                                                {manga[1].lastChapter === 0 ? \"À venir\" : \"Dernier chapitre : \" + manga[1].lastChapter}\r\n                                            </Typography>\r\n                                        </Box>\r\n                                    </Link>\r\n                                );\r\n                            })\r\n                        )}\r\n                    </Grid>\r\n                </Grid>\r\n            </Head>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withFirebase(MangasList);\r\n","import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { compose } from \"recompose\";\r\nimport * as ROUTES from \"./../../../constants/routes\";\r\nimport * as ROLES from \"./../../../constants/roles\";\r\nimport { withFirebase } from \"./../../../config/Firebase\";\r\n\r\nimport Head from \"./../../layouts/Head\";\r\n\r\n//Material-ui\r\nimport Box from \"@material-ui/core/Box\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst SignUpPage = () => (\r\n    <Head pageMeta={{ title: \"Inscription | ScanNation France\" }}>\r\n        <Box className=\"logs_page\">\r\n            <h1>Inscription</h1>\r\n            <SignUpForm />\r\n        </Box>\r\n    </Head>\r\n);\r\nconst INITIAL_STATE = {\r\n    username: \"\",\r\n    email: \"\",\r\n    passwordOne: \"\",\r\n    passwordTwo: \"\",\r\n    isAdmin: false,\r\n    loading: false,\r\n    error: null\r\n};\r\nclass SignUpFormBase extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = { ...INITIAL_STATE };\r\n    }\r\n    onSubmit = (event) => {\r\n        this.setState({ loading: true });\r\n        const { username, email, passwordOne, passwordTwo, isAdmin } = this.state;\r\n        const roles = {};\r\n        if (isAdmin) {\r\n            roles[ROLES.ADMIN] = ROLES.ADMIN;\r\n        }\r\n        if (passwordOne === passwordTwo) {\r\n            this.props.firebase\r\n                .doCreateUserWithEmailAndPassword(email, passwordOne)\r\n                .then((authUser) => {\r\n                    return this.props.firebase.user(authUser.user.uid).set({\r\n                        username,\r\n                        email,\r\n                        roles\r\n                    });\r\n                })\r\n                .then(() => {\r\n                    this.setState({ ...INITIAL_STATE });\r\n                    this.props.history.push(ROUTES.HOME);\r\n                })\r\n                .catch((error) => {\r\n                    this.setState({ error });\r\n                });\r\n        } else {\r\n            this.setState({\r\n                error: { code: \"aut/different-password\", message: \"Mot de passe différent\" }\r\n            });\r\n        }\r\n\r\n        event.preventDefault();\r\n    };\r\n    onChange = (event) => {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n    };\r\n    onChangeCheckbox = (event) => {\r\n        this.setState({ [event.target.name]: event.target.checked });\r\n    };\r\n    render() {\r\n        const { username, email, passwordOne, passwordTwo, error, isAdmin, loading } = this.state;\r\n        const isInvalid = passwordOne !== passwordTwo || passwordOne === \"\" || email === \"\" || username === \"\";\r\n        return (\r\n            <form onSubmit={this.onSubmit}>\r\n                <TextField onChange={this.onChange} label=\"Pseudo\" value={username} name=\"username\"></TextField>\r\n                <TextField onChange={this.onChange} label=\"Adresse email\" type=\"email\" value={email} name=\"email\"></TextField>\r\n                <TextField onChange={this.onChange} label=\"Mot de passe\" type=\"password\" value={passwordOne} name=\"passwordOne\"></TextField>\r\n                <TextField\r\n                    onChange={this.onChange}\r\n                    label=\"Confirmation du mot de passe\"\r\n                    type=\"password\"\r\n                    value={passwordTwo}\r\n                    name=\"passwordTwo\"\r\n                ></TextField>\r\n                {/* <FormControlLabel\r\n                    control={<Checkbox name=\"isAdmin\" checked={isAdmin} onChange={this.onChangeCheckbox} color=\"primary\" />}\r\n                    label=\"Admin\"\r\n                /> */}\r\n                <Button type=\"submit\" disabled={isInvalid} variant=\"contained\" color=\"primary\">\r\n                    {loading ? <CircularProgress size={30} /> : \"Inscription\"}\r\n                </Button>\r\n                {error && <p>{error.message}</p>}\r\n            </form>\r\n        );\r\n    }\r\n}\r\nconst SignUpLink = () => (\r\n    <p>\r\n        <Link to={ROUTES.SIGN_UP}>Toujours pas inscrit ? Rejoignez-nous !</Link>\r\n    </p>\r\n);\r\nconst SignUpForm = compose(withRouter, withFirebase)(SignUpFormBase);\r\nexport default SignUpPage;\r\nexport { SignUpForm, SignUpLink };\r\n","export const ADMIN = \"ADMIN\";\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { withFirebase } from \"./../../../config/Firebase\";\r\nimport * as ROUTES from \"./../../../constants/routes\";\r\nimport Head from \"./../../layouts/Head\";\r\n\r\n//Material ui\r\nimport Box from \"@material-ui/core/Box\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst PasswordForgetPage = () => (\r\n    <Head pageMeta={{ title: \"Mot de passe oublié | ScanNation France\" }}>\r\n        <Box className=\"logs_page\">\r\n            <h1>Mot de passe oublié</h1>\r\n            <PasswordForgetForm />\r\n        </Box>\r\n    </Head>\r\n);\r\nconst INITIAL_STATE = {\r\n    email: \"\",\r\n    error: null,\r\n    loading: false\r\n};\r\nclass PasswordForgetFormBase extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { ...INITIAL_STATE };\r\n    }\r\n    onSubmit = (event) => {\r\n        this.setState({ loading: true });\r\n        const { email } = this.state;\r\n        this.props.firebase\r\n            .doPasswordReset(email)\r\n            .then(() => {\r\n                this.setState({ ...INITIAL_STATE });\r\n            })\r\n            .catch((error) => {\r\n                this.setState({ error, loading: false });\r\n            });\r\n        event.preventDefault();\r\n    };\r\n    onChange = (event) => {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n    };\r\n    render() {\r\n        const { email, error, loading } = this.state;\r\n        const isInvalid = email === \"\";\r\n        return (\r\n            <form onSubmit={this.onSubmit}>\r\n                <TextField type=\"email\" onChange={this.onChange} label=\"Adresse email\" value={this.state.email} name=\"email\"></TextField>\r\n                <Button type=\"submit\" disabled={isInvalid} variant=\"contained\" color=\"primary\">\r\n                    {loading ? <CircularProgress size={30} /> : \"Réinitialiser\"}\r\n                </Button>\r\n                {error && <p>{error.message}</p>}\r\n            </form>\r\n        );\r\n    }\r\n}\r\nconst PasswordForgetLink = () => (\r\n    <p>\r\n        <Link to={ROUTES.PASSWORD_FORGET}>Mot de passe oublié ?</Link>\r\n    </p>\r\n);\r\nexport default PasswordForgetPage;\r\nconst PasswordForgetForm = withFirebase(PasswordForgetFormBase);\r\nexport { PasswordForgetForm, PasswordForgetLink };\r\n","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { compose } from \"recompose\";\r\nimport { SignUpLink } from \"./../Signup\";\r\nimport { PasswordForgetLink } from \"./../PasswordForget\";\r\nimport { withFirebase } from \"./../../../config/Firebase\";\r\nimport * as ROUTES from \"./../../../constants/routes\";\r\nimport Head from \"./../../layouts/Head\";\r\n\r\n// Material-ui\r\nimport Box from \"@material-ui/core/Box\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst SignInPage = () => (\r\n    <Head pageMeta={{ title: \"Connexion | ScanNation France\" }}>\r\n        <Box className=\"logs_page\">\r\n            <h1>Connexion</h1>\r\n            <SignInForm />\r\n            <PasswordForgetLink />\r\n            <SignUpLink />\r\n        </Box>\r\n    </Head>\r\n);\r\nconst INITIAL_STATE = {\r\n    email: \"\",\r\n    password: \"\",\r\n    error: null,\r\n    loading: false\r\n};\r\nclass SignInFormBase extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { ...INITIAL_STATE };\r\n    }\r\n    onSubmit = (event) => {\r\n        this.setState({ loading: true });\r\n        const { email, password } = this.state;\r\n        this.props.firebase\r\n            .doSignInWithEmailAndPassword(email, password)\r\n            .then(() => {\r\n                this.setState({ ...INITIAL_STATE });\r\n                this.props.history.push(ROUTES.HOME);\r\n            })\r\n            .catch((error) => {\r\n                this.setState({ error });\r\n            });\r\n        event.preventDefault();\r\n    };\r\n    onChange = (event) => {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n    };\r\n    render() {\r\n        const { email, password, error, loading } = this.state;\r\n        const isInvalid = password === \"\" || email === \"\";\r\n        return (\r\n            <form onSubmit={this.onSubmit}>\r\n                <TextField onChange={this.onChange} name=\"email\" value={email} label=\"Adresse email\" type=\"email\" />\r\n                <TextField onChange={this.onChange} name=\"password\" value={password} label=\"Mot de passe\" type=\"password\" />\r\n                <Button type=\"submit\" disabled={isInvalid} variant=\"contained\" color=\"primary\">\r\n                    {loading ? <CircularProgress size={30} /> : \"Connexion\"}\r\n                </Button>\r\n                {error && <p>{error.message}</p>}\r\n            </form>\r\n        );\r\n    }\r\n}\r\nconst SignInForm = compose(withRouter, withFirebase)(SignInFormBase);\r\nexport default SignInPage;\r\nexport { SignInForm };\r\n","import React, { Component } from \"react\";\r\nimport { withFirebase } from \"./../../../config/Firebase\";\r\n\r\n//Material-ui\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst INITIAL_STATE = {\r\n    passwordOne: \"\",\r\n    passwordTwo: \"\",\r\n    loading: false,\r\n    error: null\r\n};\r\nclass PasswordChangeForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { ...INITIAL_STATE };\r\n    }\r\n    onSubmit = (event) => {\r\n        this.setState({loading: true})\r\n        const { passwordOne } = this.state;\r\n        this.props.firebase\r\n            .doPasswordUpdate(passwordOne)\r\n            .then(() => {\r\n                this.setState({ ...INITIAL_STATE });\r\n            })\r\n            .catch((error) => {\r\n                this.setState({ error });\r\n            });\r\n        event.preventDefault();\r\n    };\r\n    onChange = (event) => {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n    };\r\n    render() {\r\n        const { passwordOne, passwordTwo, error, loading } = this.state;\r\n        const isInvalid = passwordOne !== passwordTwo || passwordOne === \"\";\r\n        return (\r\n            <form onSubmit={this.onSubmit}>\r\n                <TextField onChange={this.onChange} name=\"passwordOne\" value={passwordOne} type=\"password\" label=\"Nouveau mot de passe\" />\r\n                <TextField onChange={this.onChange} name=\"passwordTwo\" value={passwordTwo} type=\"password\" label=\"Confirmation du mot de passe\" />\r\n                <Button type=\"submit\" disabled={isInvalid} variant=\"contained\" color=\"primary\">\r\n                    {loading ? <CircularProgress size={30} /> : \"Changer de mot de passe\"}\r\n                </Button>\r\n                {error && <p>{error.message}</p>}\r\n            </form>\r\n        );\r\n    }\r\n}\r\nexport default withFirebase(PasswordChangeForm);\r\n","import React, { Component } from \"react\";\r\nimport PasswordChangeForm from \"./../PasswordChange\";\r\nimport { AuthUserContext, withAuthorization } from \"./../../Session\";\r\nimport Head from \"./../../layouts/Head\";\r\n\r\n//Material-ui\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nclass AccountPage extends Component {\r\n    render() {\r\n        return (\r\n            <AuthUserContext.Consumer>\r\n                {(authUser) => (\r\n                    <Head pageMeta={{ title: authUser.username + \" - Compte | ScanNation France\" }}>\r\n                        <Box className=\"logs_page\">\r\n                            <h1>{authUser.username}</h1>\r\n                            <Grid container spacing={5}>\r\n                                <Grid item xs={5}>\r\n                                    <h2>Gestion du compte :</h2>\r\n                                    <PasswordChangeForm />\r\n                                </Grid>\r\n                                <Grid item xs={7}>\r\n                                    <h2>Commentaires :</h2>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Box>\r\n                    </Head>\r\n                )}\r\n            </AuthUserContext.Consumer>\r\n        );\r\n    }\r\n}\r\n\r\nconst condition = (authUser) => !!authUser;\r\nexport default withAuthorization(condition)(AccountPage);\r\n","import React, { Component } from \"react\";\r\nimport { compose } from \"recompose\";\r\nimport { withFirebase } from \"./../../config/Firebase\";\r\nimport { withAuthorization } from \"./../Session\";\r\nimport * as ROLES from \"./../../constants/roles\";\r\n\r\nclass AdminPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading: false,\r\n            users: []\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.setState({ loading: true });\r\n        this.props.firebase.users().on(\"value\", (snapshot) => {\r\n            const usersObject = snapshot.val();\r\n            const usersList = Object.keys(usersObject).map((key) => ({\r\n                ...usersObject[key],\r\n                uid: key\r\n            }));\r\n            this.setState({\r\n                users: usersList,\r\n                loading: false\r\n            });\r\n        });\r\n    }\r\n    componentWillUnmount() {\r\n        this.props.firebase.users().off();\r\n    }\r\n    render() {\r\n        const { users, loading } = this.state;\r\n        return (\r\n            <div>\r\n                <h1>Admin</h1>\r\n                {loading && <div>Loading ...</div>}\r\n                <UserList users={users} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst UserList = ({ users }) => (\r\n    <ul>\r\n        {users.map((user) => (\r\n            <li key={user.uid}>\r\n                <span>\r\n                    <strong>ID:</strong> {user.uid}\r\n                </span>\r\n                <span>\r\n                    <strong>E-Mail:</strong> {user.email}\r\n                </span>\r\n                <span>\r\n                    <strong>Username:</strong> {user.username}\r\n                </span>\r\n            </li>\r\n        ))}\r\n    </ul>\r\n);\r\n\r\nconst condition = (authUser) => authUser && !!authUser.roles[ROLES.ADMIN];\r\nexport default compose(withAuthorization(condition), withFirebase)(AdminPage);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { compose } from \"recompose\";\r\nimport { withAuthorization } from \"../../components/Session\";\r\nimport * as ROLES from \"../../constants/roles\";\r\nimport Head from \"../../components/layouts/Head\";\r\n\r\n// firebase\r\nimport { withFirebase } from \"../../config/Firebase\";\r\n\r\n//Material UI\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\n\r\nconst styles = {\r\n    option: {\r\n        cursor: \"pointer\",\r\n        color: \"#000\"\r\n    },\r\n    select: {\r\n        color: \"#fff\"\r\n    },\r\n    input: {\r\n        display: \"none\"\r\n    },\r\n    uploadImg: {\r\n        margin: \"10px 0\",\r\n        color: \"#fff\",\r\n\r\n        \"& > span\": {\r\n            marginRight: \"10px\"\r\n        }\r\n    },\r\n    errors: {\r\n        color: \"#f44336\"\r\n    },\r\n    checkbox: {\r\n        \"& svg\": {\r\n            color: \"#fff\"\r\n        }\r\n    }\r\n};\r\nconst INITIAL_STATE = {\r\n    images: null,\r\n    url: [],\r\n    selectManga: \"\",\r\n    selectChapter: \"\",\r\n    selectTitle: \"\",\r\n    isLastChapter: false,\r\n    loading: false,\r\n    errors: null\r\n};\r\nclass UploadChapter extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            mangas: [],\r\n            ...INITIAL_STATE\r\n        };\r\n    }\r\n\r\n    titleCase = (str) => {\r\n        let splitStr = str.toLowerCase().split(\" \");\r\n        for (let i = 0; i < splitStr.length; i++) {\r\n            splitStr[i] = splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1);\r\n        }\r\n\r\n        return splitStr.join(\" \");\r\n    };\r\n\r\n    handleImage = (e) => {\r\n        if (e.target.files[0]) {\r\n            const images = e.target.files;\r\n            this.setState(() => ({ images }));\r\n        }\r\n    };\r\n    handleChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    };\r\n    handleChecked = (e) => {\r\n        this.setState({ [e.target.value]: e.target.checked });\r\n    };\r\n\r\n    handleValidation = () => {\r\n        let { selectManga, selectChapter, selectTitle, images } = this.state;\r\n        let errors = {};\r\n        let formIsValid = true;\r\n\r\n        if (!selectManga) {\r\n            formIsValid = false;\r\n            errors[\"selectManga\"] = \"Champ obligatoire\";\r\n        }\r\n        if (!selectChapter) {\r\n            formIsValid = false;\r\n            errors[\"selectChapter\"] = \"Champ obligatoire\";\r\n        } else if (isNaN(selectChapter)) {\r\n            formIsValid = false;\r\n            errors[\"selectChapter\"] = \"Chiffres uniquement\";\r\n        }\r\n\r\n        if (!selectTitle) {\r\n            formIsValid = false;\r\n            errors[\"selectTitle\"] = \"Champ obligatoire\";\r\n        }\r\n        if (!images) {\r\n            formIsValid = false;\r\n            errors[\"images\"] = \"Image obligatoire\";\r\n        }\r\n\r\n        this.setState({ errors: errors });\r\n        return formIsValid;\r\n    };\r\n\r\n    handleUpload = () => {\r\n        if (!this.handleValidation()) {\r\n            return;\r\n        }\r\n\r\n        const firestore = this.props.firebase.firestore;\r\n        const { images } = this.state;\r\n        const promises = [];\r\n        let url = [];\r\n        let pathUploadImg = this.state.selectManga + \"/\" + this.state.selectChapter;\r\n\r\n        this.setState({ loading: true });\r\n\r\n        Object.values(images).map((image, i) => {\r\n            let uploadTask = this.props.firebase.storage\r\n                .ref(`${pathUploadImg}/${image.name}`)\r\n                .put(image)\r\n                .then((snap) => {\r\n                    return snap.ref.getDownloadURL();\r\n                })\r\n                .then((downloadURL) => {\r\n                    url.push({ pageImg: downloadURL, pageNumber: i + 1 });\r\n                });\r\n            return promises.push(uploadTask);\r\n        });\r\n\r\n        Promise.all(promises).then(() => {\r\n            url.sort((a, b) => (a.pageImg > b.pageImg ? 1 : b.pageImg > a.pageImg ? -1 : 0));\r\n            this.setState({ url: url }, () => {\r\n                let newChapter = firestore.collection(\"chapters\").doc();\r\n                newChapter\r\n                    .set({\r\n                        chapter: parseInt(this.state.selectChapter),\r\n                        mangaId: this.state.selectManga,\r\n                        titleChapter: this.state.selectTitle,\r\n                        pageCount: this.state.url.length,\r\n                        pages: this.state.url,\r\n                        createdAt: new Date()\r\n                    })\r\n                    .then(() => {\r\n                        if (this.state.isLastChapter) {\r\n                            firestore\r\n                                .collection(\"mangas\")\r\n                                .doc(this.state.selectManga)\r\n                                .update({ lastChapter: parseInt(this.state.selectChapter) });\r\n                        }\r\n                    })\r\n                    .then(() => {\r\n                        const planningRef = firestore.collection(\"planning\").doc(this.state.selectManga);\r\n\r\n                        planningRef\r\n                            .get()\r\n                            .then((docSnapshot) => {\r\n                                if (docSnapshot.exists) {\r\n                                    planningRef.update({ status: parseInt(0) });\r\n                                } else {\r\n                                    planningRef.set({\r\n                                        mangaId: this.state.selectManga,\r\n                                        status: 0,\r\n                                        mangaName: this.titleCase(this.state.selectManga.replace(/-/g, \" \"))\r\n                                    });\r\n                                }\r\n                            })\r\n                            .then(() => {\r\n                                this.setState({ ...INITIAL_STATE });\r\n                                this.fileInput.value = \"\";\r\n                            });\r\n                    });\r\n            });\r\n        });\r\n    };\r\n\r\n    componentDidMount() {\r\n        const firestore = this.props.firebase.firestore;\r\n        let mangas = {};\r\n        firestore\r\n            .collection(\"/mangas\")\r\n            .get()\r\n            .then((results) => {\r\n                results.forEach((doc) => {\r\n                    mangas[doc.id] = doc.data();\r\n                });\r\n                return this.setState({ mangas: mangas });\r\n            });\r\n    }\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { images, errors } = this.state;\r\n        return (\r\n            <Head pageMeta={{ title: \"Ajouter un chapitre | ScanNation France \" }}>\r\n                <Box className=\"main\">\r\n                    <form className=\"formAdd\" noValidate autoComplete=\"off\">\r\n                        <FormControl className={classes.formControl} error={errors ? !!(\"selectManga\" in errors) : false}>\r\n                            <InputLabel className={classes.select} htmlFor=\"selectManga\">\r\n                                Choisir un manga\r\n                            </InputLabel>\r\n                            <Select\r\n                                className={classes.select}\r\n                                native\r\n                                value={this.state.selectManga}\r\n                                onChange={this.handleChange}\r\n                                name=\"selectManga\"\r\n                                id=\"selectManga\"\r\n                            >\r\n                                <option value=\"\"></option>\r\n                                {Object.entries(this.state.mangas).map((manga, i) => {\r\n                                    return (\r\n                                        <option value={manga[0]} key={i} className={classes.option}>\r\n                                            {manga[1].title}\r\n                                        </option>\r\n                                    );\r\n                                })}\r\n                            </Select>\r\n                            {errors ? !!(\"selectManga\" in errors) ? <FormHelperText>{errors[\"selectManga\"]}</FormHelperText> : null : false}\r\n                        </FormControl>\r\n                        <TextField\r\n                            value={this.state.selectTitle}\r\n                            onChange={this.handleChange}\r\n                            label=\"Titre du chapitre\"\r\n                            name=\"selectTitle\"\r\n                            error={errors ? !!(\"selectTitle\" in errors) : false}\r\n                            helperText={errors ? (\"selectTitle\" in errors ? errors[\"selectTitle\"] : \"\") : false}\r\n                        />\r\n                        <TextField\r\n                            value={this.state.selectChapter}\r\n                            onChange={this.handleChange}\r\n                            label=\"Numéro du chapitre\"\r\n                            name=\"selectChapter\"\r\n                            error={errors ? !!(\"selectChapter\" in errors) : false}\r\n                            helperText={errors ? (\"selectChapter\" in errors ? errors[\"selectChapter\"] : \"\") : false}\r\n                        />\r\n                        <input\r\n                            accept=\"image/*\"\r\n                            id=\"contained-button-file\"\r\n                            type=\"file\"\r\n                            onChange={this.handleImage}\r\n                            multiple\r\n                            className={classes.input}\r\n                            ref={(ref) => (this.fileInput = ref)}\r\n                        />\r\n                        <label className={classes.uploadImg} htmlFor=\"contained-button-file\">\r\n                            <Fab color=\"primary\" component=\"span\">\r\n                                <AddIcon />\r\n                            </Fab>\r\n                            <span className={errors ? (\"images\" in errors ? classes.errors : \"\") : null}>\r\n                                {images ? images.length + \" fichiers\" : \"Ajouter des images\"}\r\n                            </span>\r\n                        </label>\r\n\r\n                        <FormControlLabel\r\n                            control={<Checkbox className={classes.checkbox} onChange={this.handleChecked} value=\"isLastChapter\" color=\"primary\" />}\r\n                            label=\"Définir comme chapitre le plus récent\"\r\n                        />\r\n\r\n                        <Button variant=\"contained\" color=\"primary\" startIcon={<CloudUploadIcon />} onClick={this.handleUpload}>\r\n                            {this.state.loading ? <CircularProgress size={30} color=\"secondary\" /> : \"Ajouter un chapitre\"}\r\n                        </Button>\r\n                    </form>\r\n                </Box>\r\n            </Head>\r\n        );\r\n    }\r\n}\r\nUploadChapter.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\nconst condition = (authUser) => authUser && !!authUser.roles[ROLES.ADMIN];\r\nexport default compose(withStyles(styles), withAuthorization(condition), withFirebase)(UploadChapter);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { compose } from \"recompose\";\r\nimport { withAuthorization } from \"../../components/Session\";\r\nimport * as ROLES from \"../../constants/roles\";\r\nimport Head from \"../../components/layouts/Head\";\r\n\r\n// firebase\r\nimport { withFirebase } from \"../../config/Firebase\";\r\n\r\n//Material-ui\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\n\r\nconst styles = {\r\n    input: {\r\n        display: \"none\"\r\n    },\r\n    uploadImg: {\r\n        margin: \"10px 0\",\r\n        color: \"#fff\",\r\n\r\n        \"& > span\": {\r\n            marginRight: \"10px\"\r\n        }\r\n    },\r\n    errors: {\r\n        color: \"#f44336\"\r\n    }\r\n};\r\nconst INITIAL_STATE = {\r\n    manga_name: \"\",\r\n    synopsis: \"\",\r\n    image: null,\r\n    loading: false,\r\n    errors: null\r\n};\r\nclass UploadManga extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { ...INITIAL_STATE };\r\n    }\r\n\r\n    handleImage = (e) => {\r\n        if (e.target.files[0]) {\r\n            const image = e.target.files;\r\n            this.setState(() => ({ image }));\r\n        }\r\n    };\r\n\r\n    handleChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    };\r\n\r\n    handleValidation = () => {\r\n        let manga_name = this.state.manga_name;\r\n        let synopsis = this.state.synopsis;\r\n        let image = this.state.image;\r\n        let errors = {};\r\n        let formIsValid = true;\r\n\r\n        if (!manga_name) {\r\n            formIsValid = false;\r\n            errors[\"manga_name\"] = \"Champ obligatoire\";\r\n        }\r\n\r\n        if (!synopsis) {\r\n            formIsValid = false;\r\n            errors[\"synopsis\"] = \"Champ obligatoire\";\r\n        }\r\n        if (!image) {\r\n            formIsValid = false;\r\n            errors[\"image\"] = \"Image obligatoire\";\r\n        }\r\n\r\n        this.setState({ errors: errors });\r\n        return formIsValid;\r\n    };\r\n\r\n    handleUpload = () => {\r\n        if (!this.handleValidation()) {\r\n            return;\r\n        }\r\n\r\n        const storage = this.props.firebase.storage;\r\n        const firestore = this.props.firebase.firestore;\r\n        const { image } = this.state;\r\n        const promises = [];\r\n        const formatedMangaName = this.state.manga_name\r\n            .split(\" \")\r\n            .join(\"-\")\r\n            .toLowerCase();\r\n        let data = {\r\n            resume: this.state.synopsis,\r\n            title: this.state.manga_name,\r\n            lastChapter: 0,\r\n            mangaImage: \"\"\r\n        };\r\n        this.setState({ loading: true });\r\n        let uploadTask = storage\r\n            .ref(`${formatedMangaName}/${image[0].name}`)\r\n            .put(image[0])\r\n            .then((snap) => {\r\n                return snap.ref.getDownloadURL();\r\n            })\r\n            .then((downloadURL) => {\r\n                return (data.mangaImage = downloadURL);\r\n            });\r\n        promises.push(uploadTask);\r\n\r\n        Promise.all(promises).then(() => {\r\n            firestore\r\n                .collection(\"mangas\")\r\n                .doc(formatedMangaName)\r\n                .set(data)\r\n                .then(() => {\r\n                    this.setState({ ...INITIAL_STATE });\r\n                    this.fileInput.value = \"\";\r\n                });\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { manga_name, synopsis, image, errors, loading } = this.state;\r\n        return (\r\n            <Head pageMeta={{ title: \"Ajouter un manga | ScanNation France \" }}>\r\n                <Box className=\"main\">\r\n                    <form className=\"formAdd\" noValidate autoComplete=\"off\">\r\n                        <TextField\r\n                            onChange={this.handleChange}\r\n                            name=\"manga_name\"\r\n                            value={manga_name}\r\n                            label=\"Nom du Manga\"\r\n                            error={errors ? !!(\"manga_name\" in errors) : false}\r\n                            helperText={errors ? (\"manga_name\" in errors ? errors[\"manga_name\"] : \"\") : false}\r\n                        />\r\n                        <TextField\r\n                            onChange={this.handleChange}\r\n                            name=\"synopsis\"\r\n                            value={synopsis}\r\n                            label=\"Synopsis\"\r\n                            multiline\r\n                            rows={2}\r\n                            error={errors ? !!(\"synopsis\" in errors) : false}\r\n                            helperText={errors ? (\"synopsis\" in errors ? errors[\"synopsis\"] : \"\") : false}\r\n                        />\r\n                        <input\r\n                            accept=\"image/*\"\r\n                            onChange={this.handleImage}\r\n                            ref={(ref) => (this.fileInput = ref)}\r\n                            className={classes.input}\r\n                            id=\"contained-button-file\"\r\n                            type=\"file\"\r\n                        />\r\n                        <label className={classes.uploadImg} htmlFor=\"contained-button-file\">\r\n                            <Fab color=\"primary\" component=\"span\">\r\n                                <AddIcon />\r\n                            </Fab>\r\n                            <span className={errors ? (\"image\" in errors ? classes.errors : \"\") : null}>\r\n                                {image ? image[0].name : \"Ajouter une Image\"}\r\n                            </span>\r\n                        </label>\r\n                        <Button variant=\"contained\" color=\"primary\" startIcon={<CloudUploadIcon />} onClick={this.handleUpload}>\r\n                            {loading ? <CircularProgress size={30} color=\"secondary\" /> : \"Ajouter un manga\"}\r\n                        </Button>\r\n                    </form>\r\n                </Box>\r\n            </Head>\r\n        );\r\n    }\r\n}\r\nUploadManga.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\nconst condition = (authUser) => authUser && !!authUser.roles[ROLES.ADMIN];\r\nexport default compose(withStyles(styles), withAuthorization(condition), withFirebase)(UploadManga);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { compose } from \"recompose\";\r\nimport { withAuthorization } from \"../../components/Session\";\r\nimport * as ROLES from \"../../constants/roles\";\r\nimport Head from \"../../components/layouts/Head\";\r\n\r\n// firebase\r\nimport { withFirebase } from \"../../config/Firebase\";\r\n\r\n//Material-ui\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\n\r\nconst styles = {\r\n    select: {\r\n        color: \"#fff\",\r\n\r\n        \"& option\": {\r\n            cursor: \"pointer\",\r\n            color: \"#000\"\r\n        }\r\n    }\r\n};\r\nconst INITIAL_STATE = {\r\n    selectManga: \"\",\r\n    selectStatus: \"\",\r\n    loading: false,\r\n    errors: null\r\n};\r\nclass UploadPlanning extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            mangas: [],\r\n            ...INITIAL_STATE\r\n        };\r\n    }\r\n\r\n    titleCase = (str) => {\r\n        let splitStr = str.toLowerCase().split(\" \");\r\n        for (let i = 0; i < splitStr.length; i++) {\r\n            splitStr[i] = splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1);\r\n        }\r\n\r\n        return splitStr.join(\" \");\r\n    };\r\n\r\n    handleChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    };\r\n\r\n    handleValidation = () => {\r\n        let { selectManga, selectStatus } = this.state;\r\n        let errors = {};\r\n        let formIsValid = true;\r\n\r\n        if (!selectManga) {\r\n            formIsValid = false;\r\n            errors[\"selectManga\"] = \"Champ obligatoire\";\r\n        }\r\n        if (!selectStatus) {\r\n            formIsValid = false;\r\n            errors[\"selectStatus\"] = \"Champ obligatoire\";\r\n        }\r\n\r\n        this.setState({ errors: errors });\r\n        return formIsValid;\r\n    };\r\n\r\n    handleUpload = () => {\r\n        if (!this.handleValidation()) {\r\n            return;\r\n        }\r\n        this.setState({ loading: true });\r\n        const { selectManga, selectStatus } = this.state;\r\n        const firestore = this.props.firebase.firestore;\r\n\r\n        let newPlanning = firestore.collection(\"planning\").doc(selectManga);\r\n        newPlanning\r\n            .set({\r\n                mangaId: selectManga,\r\n                status: parseInt(selectStatus),\r\n                mangaName: this.titleCase(selectManga.replace(/-/g, \" \"))\r\n            })\r\n            .then(() => {\r\n                this.setState({ ...INITIAL_STATE });\r\n            });\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        const firestore = this.props.firebase.firestore;\r\n        let mangas = {};\r\n        firestore\r\n            .collection(\"/mangas\")\r\n            .get()\r\n            .then((results) => {\r\n                results.forEach((doc) => {\r\n                    mangas[doc.id] = doc.data();\r\n                });\r\n                return this.setState({ mangas: mangas });\r\n            });\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { errors } = this.state;\r\n        return (\r\n            <Head pageMeta={{ title: \"Ajouter un planning | ScanNation France \" }}>\r\n                <Box className=\"main\">\r\n                    <form className=\"formAdd\" noValidate autoComplete=\"off\">\r\n                        <FormControl className={classes.formControl} error={errors ? !!(\"selectManga\" in errors) : false}>\r\n                            <InputLabel className={classes.select} htmlFor=\"selectManga\">\r\n                                Choisir un manga\r\n                            </InputLabel>\r\n                            <Select\r\n                                className={classes.select}\r\n                                native\r\n                                value={this.state.selectManga}\r\n                                onChange={this.handleChange}\r\n                                name=\"selectManga\"\r\n                                id=\"selectManga\"\r\n                            >\r\n                                <option value=\"\"></option>\r\n                                {Object.entries(this.state.mangas).map((manga, i) => {\r\n                                    return (\r\n                                        <option value={manga[0]} key={i}>\r\n                                            {manga[1].title}\r\n                                        </option>\r\n                                    );\r\n                                })}\r\n                            </Select>\r\n                            {errors ? !!(\"selectManga\" in errors) ? <FormHelperText>{errors[\"selectManga\"]}</FormHelperText> : null : false}\r\n                        </FormControl>\r\n\r\n                        <FormControl className={classes.formControl} error={errors ? !!(\"selectStatus\" in errors) : false}>\r\n                            <InputLabel className={classes.select} htmlFor=\"selectStatus\">\r\n                                Statut de la traduction\r\n                            </InputLabel>\r\n                            <Select\r\n                                className={classes.select}\r\n                                native\r\n                                value={this.state.selectStatus}\r\n                                onChange={this.handleChange}\r\n                                name=\"selectStatus\"\r\n                                id=\"selectStatus\"\r\n                            >\r\n                                <option value=\"\"></option>\r\n                                <option value=\"0\">En attente du prochain chapitre</option>\r\n                                <option value=\"25\">Clean des pages</option>\r\n                                <option value=\"50\">Traduction en cours</option>\r\n                                <option value=\"100\">Dernier check</option>\r\n                            </Select>\r\n                            {errors ? !!(\"selectStatus\" in errors) ? <FormHelperText>{errors[\"selectStatus\"]}</FormHelperText> : null : false}\r\n                        </FormControl>\r\n                        <br />\r\n                        <Button variant=\"contained\" color=\"primary\" startIcon={<CloudUploadIcon />} onClick={this.handleUpload}>\r\n                            {this.state.loading ? <CircularProgress size={30} color=\"secondary\" /> : \"Ajouter un nouveau planning\"}\r\n                        </Button>\r\n                    </form>\r\n                </Box>\r\n            </Head>\r\n        );\r\n    }\r\n}\r\nUploadPlanning.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\nconst condition = (authUser) => authUser && !!authUser.roles[ROLES.ADMIN];\r\nexport default compose(withStyles(styles), withAuthorization(condition), withFirebase)(UploadPlanning);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { compose } from \"recompose\";\r\nimport { withAuthorization } from \"../../components/Session\";\r\nimport * as ROLES from \"../../constants/roles\";\r\nimport Head from \"../../components/layouts/Head\";\r\n\r\n// firebase\r\nimport { withFirebase } from \"../../config/Firebase\";\r\n\r\n//Material-ui\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst styles = {};\r\nconst INITIAL_STATE = {\r\n    title: \"\",\r\n    actu_info: \"\",\r\n    loading: false,\r\n    errors: null\r\n};\r\nclass UploadNews extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            ...INITIAL_STATE\r\n        };\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    };\r\n\r\n    handleValidation = () => {\r\n        const { title, actu_info } = this.state;\r\n        let errors = {};\r\n        let formIsValid = true;\r\n\r\n        if (!title) {\r\n            formIsValid = false;\r\n            errors[\"title\"] = \"Champ obligatoire\";\r\n        }\r\n\r\n        if (!actu_info) {\r\n            formIsValid = false;\r\n            errors[\"actu_info\"] = \"Champ obligatoire\";\r\n        }\r\n\r\n        this.setState({ errors: errors });\r\n        return formIsValid;\r\n    };\r\n\r\n    handleUpload = () => {\r\n        if (!this.handleValidation()) {\r\n            return;\r\n        }\r\n        const { title, actu_info } = this.state;\r\n        const firestore = this.props.firebase.firestore;\r\n        let data = {\r\n            date: new Date(),\r\n            title: title,\r\n            actuInfo: actu_info\r\n        };\r\n        this.setState({ loading: true });\r\n        firestore\r\n            .collection(\"news\")\r\n            .doc()\r\n            .set(data)\r\n            .then(() => {\r\n                this.setState({ ...INITIAL_STATE });\r\n            });\r\n    };\r\n    render() {\r\n        const { loading, errors, title, actu_info } = this.state;\r\n        return (\r\n            <Head pageMeta={{ title: \"Ajouter une actualité | ScanNation France \" }}>\r\n                <Box className=\"main\">\r\n                    <form className=\"formAdd\" noValidate autoComplete=\"off\">\r\n                        <TextField\r\n                            onChange={this.handleChange}\r\n                            name=\"title\"\r\n                            value={title}\r\n                            label=\"Titre de l'actu\"\r\n                            error={errors ? !!(\"title\" in errors) : false}\r\n                            helperText={errors ? (\"title\" in errors ? errors[\"title\"] : \"\") : false}\r\n                        />\r\n                        <TextField\r\n                            onChange={this.handleChange}\r\n                            name=\"actu_info\"\r\n                            value={actu_info}\r\n                            label=\"Info de l'actu\"\r\n                            multiline\r\n                            rows={2}\r\n                            error={errors ? !!(\"actu_info\" in errors) : false}\r\n                            helperText={errors ? (\"actu_info\" in errors ? errors[\"actu_info\"] : \"\") : false}\r\n                        />\r\n                        <br />\r\n                        <Button variant=\"contained\" color=\"primary\" startIcon={<CloudUploadIcon />} onClick={this.handleUpload}>\r\n                            {loading ? <CircularProgress size={30} color=\"secondary\" /> : \"Ajouter une actualité\"}\r\n                        </Button>\r\n                    </form>\r\n                </Box>\r\n            </Head>\r\n        );\r\n    }\r\n}\r\n\r\nUploadNews.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\nconst condition = (authUser) => authUser && !!authUser.roles[ROLES.ADMIN];\r\nexport default compose(withStyles(styles), withAuthorization(condition), withFirebase)(UploadNews);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n//Material-ui\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\n\r\nconst styles = {\r\n    media: {\r\n        height: 440\r\n    }\r\n};\r\nclass MangaInfo extends Component {\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <Card>\r\n                {Object.values(this.props.mangaInfo).map((data, i) => {\r\n                    return (\r\n                        <Box key={i}>\r\n                            <CardMedia className={classes.media} image={data.mangaImage} title=\"Contemplative Reptile\" />\r\n                            <CardContent>\r\n                                <Typography component=\"h3\">{data.title}</Typography>\r\n                                <Typography variant=\"body1\">{data.resume}</Typography>\r\n                            </CardContent>\r\n                        </Box>\r\n                    );\r\n                })}\r\n            </Card>\r\n        );\r\n    }\r\n}\r\nMangaInfo.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\nexport default withStyles(styles)(MangaInfo);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport MangaInfo from \"../components/mangas/MangaInfo\";\r\nimport * as ROUTES from \"./../constants/routes\";\r\nimport Head from \"./../components/layouts/Head\";\r\n\r\nimport { withFirebase } from \"./../config/Firebase\";\r\n\r\n//Material-ui\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst styles = {\r\n    noChapter: {\r\n        color: \"#fff\"\r\n    }\r\n};\r\n\r\nclass MangaListChapters extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            mangaId: this.props.match.params.manga_name,\r\n            mangaInfo: [],\r\n            listChapters: [],\r\n            titleChapter: \"\",\r\n            loading: true\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        const firestore = this.props.firebase.firestore;\r\n        let mangas = {};\r\n        let chapters = {};\r\n\r\n        firestore\r\n            .collection(\"/mangas/\")\r\n            .doc(this.state.mangaId)\r\n            .get()\r\n            .then((results) => {\r\n                if (results.exists) {\r\n                    mangas[results.id] = results.data();\r\n                    this.setState({ mangaInfo: mangas, titleChapter: results.data().title }, () => {\r\n                        return firestore\r\n                            .collection(\"/chapters\")\r\n                            .where(\"mangaId\", \"==\", this.state.mangaId)\r\n                            .orderBy(\"chapter\", \"desc\")\r\n                            .get()\r\n                            .then((snapshot) => {\r\n                                snapshot.forEach((doc) => {\r\n                                    chapters[doc.id] = doc.data();\r\n                                    chapters[doc.id].title = mangas[doc.data().mangaId].title;\r\n                                    chapters[doc.id].resume = mangas[doc.data().mangaId].resume;\r\n                                    chapters[doc.id].mangaImage = mangas[doc.data().mangaId].mangaImage;\r\n                                });\r\n                                this.setState({ listChapters: chapters, loading: false });\r\n                            });\r\n                    });\r\n                } else {\r\n                    return this.props.history.push(ROUTES.HOME);\r\n                }\r\n            });\r\n    }\r\n    render() {\r\n        const { listChapters, titleChapter } = this.state;\r\n        const { classes } = this.props;\r\n        return (\r\n            <Head pageMeta={{ title: \"Chapitres de \" + titleChapter + \" | ScanNation France\" }}>\r\n                <Box className=\"main\">\r\n                    <Grid item md={12}>\r\n                        <Typography variant=\"h5\" component=\"h3\" className=\"titlePage\">\r\n                            Liste des chapitres\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid container spacing={5}>\r\n                        <Grid item md={8} className=\"containerInfo\">\r\n                            {this.state.loading ? (\r\n                                <CircularProgress size={30} className=\"loadingInfo\" />\r\n                            ) : Object.entries(listChapters).length === 0 ? (\r\n                                <Typography variant=\"body1\" component=\"p\" className={classes.noChapter}>\r\n                                    Pas de chapitres encore disponibles sur le site\r\n                                </Typography>\r\n                            ) : (\r\n                                Object.values(this.state.listChapters).map((listChapter, i) => {\r\n                                    return (\r\n                                        <Link key={i} to={listChapter.mangaId + \"/\" + listChapter.chapter} className=\"newChapter\">\r\n                                            <Box className=\"newChapterImg\">\r\n                                                <img src={listChapter.mangaImage} alt=\"\" />\r\n                                            </Box>\r\n                                            <Box>\r\n                                                <Typography variant=\"body1\" component=\"p\">\r\n                                                    {listChapter.title} {listChapter.chapter}\r\n                                                </Typography>\r\n                                                <Typography variant=\"body1\" component=\"p\">\r\n                                                    {listChapter.titleChapter}\r\n                                                </Typography>\r\n                                            </Box>\r\n                                        </Link>\r\n                                    );\r\n                                })\r\n                            )}\r\n                        </Grid>\r\n                        <Grid item md={4}>\r\n                            <MangaInfo mangaInfo={this.state.mangaInfo} />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n            </Head>\r\n        );\r\n    }\r\n}\r\nMangaListChapters.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\nexport default withStyles(styles)(withFirebase(MangaListChapters));\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\r\nimport Zoom from \"@material-ui/core/Zoom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        position: \"fixed\",\r\n        bottom: theme.spacing(2),\r\n        right: theme.spacing(2)\r\n    }\r\n}));\r\n\r\nconst ScrollTop = (props) => {\r\n    const { children } = props;\r\n    const classes = useStyles();\r\n\r\n    const trigger = useScrollTrigger({\r\n        disableHysteresis: true,\r\n        threshold: 100\r\n    });\r\n\r\n    const handleClick = (event) => {\r\n        const anchor = (event.target.ownerDocument || document).querySelector(\"#back-to-top-anchor\");\r\n\r\n        if (anchor) {\r\n            anchor.scrollIntoView({ behavior: \"smooth\", block: \"center\" });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Zoom in={trigger}>\r\n            <div className={classes.root} onClick={handleClick}>\r\n                {children}\r\n            </div>\r\n        </Zoom>\r\n    );\r\n};\r\n\r\nScrollTop.propTypes = {\r\n    children: PropTypes.element.isRequired\r\n};\r\n\r\nexport default ScrollTop;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport Head from \"./../components/layouts/Head\";\r\nimport * as ROUTES from \"./../constants/routes\";\r\nimport ScrollTop from \"../components/helpers/ScrollTop\";\r\n\r\nimport Img from \"react-image\";\r\n\r\n//Firebase\r\nimport { withFirebase } from \"./../config/Firebase\";\r\n\r\n//Material-ui\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\r\nimport KeyboardBackspace from \"@material-ui/icons/KeyboardBackspace\";\r\n\r\nconst styles = {\r\n    container: {\r\n        maxWidth: \"975px\",\r\n        margin: \"0 auto\",\r\n        \"& a, & a:hover\": {\r\n            background: \"transparent\",\r\n            boxShadow: \"none\",\r\n            color: \"#fff\",\r\n            paddingLeft: \"0\",\r\n            paddingBottom: \"20px\"\r\n        }\r\n    },\r\n    page: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        marginBottom: \"20px\",\r\n\r\n        \"& img\": {\r\n            width: \"100%\"\r\n        }\r\n    }\r\n};\r\n\r\nclass MangaReadChapter extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            mangaId: this.props.match.params.manga_name,\r\n            titleChapter: \"\",\r\n            nbChapter: parseInt(this.props.match.params.nb_chapter),\r\n            chapterData: [],\r\n            loading: true,\r\n            isImgLoaded: false\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        const firestore = this.props.firebase.firestore;\r\n        let mangas = {};\r\n        let chapters = {};\r\n\r\n        firestore\r\n            .collection(\"/mangas/\")\r\n            .doc(this.state.mangaId)\r\n            .get()\r\n            .then((results) => {\r\n                if (results.exists) {\r\n                    mangas[results.id] = results.data();\r\n                    this.setState({ titleChapter: results.data().title });\r\n                    this.setState({ mangaInfo: mangas }, () => {\r\n                        return firestore\r\n                            .collection(\"/chapters\")\r\n                            .where(\"mangaId\", \"==\", this.state.mangaId)\r\n                            .where(\"chapter\", \"==\", this.state.nbChapter)\r\n                            .get()\r\n                            .then((snapshot) => {\r\n                                snapshot.forEach((doc) => {\r\n                                    chapters[doc.id] = doc.data();\r\n                                    chapters[doc.id].title = mangas[doc.data().mangaId].title;\r\n                                });\r\n                                this.setState({ chapterData: chapters });\r\n                            });\r\n                    });\r\n                } else {\r\n                    return this.props.history.push(ROUTES.HOME);\r\n                }\r\n            });\r\n    }\r\n    render() {\r\n        const { titleChapter, nbChapter } = this.state;\r\n        const { classes } = this.props;\r\n        console.log(this.props);\r\n        return (\r\n            <Head pageMeta={{ title: \"Chapitre \" + nbChapter + \" de \" + titleChapter + \" | ScanNation France\" }}>\r\n                <Toolbar id=\"back-to-top-anchor\" />\r\n                <Box className={classes.container}>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        className={classes.button}\r\n                        startIcon={<KeyboardBackspace />}\r\n                        component={Link}\r\n                        to={\"/\" + this.props.match.params.manga_name}\r\n                    >\r\n                        Liste des chapitres\r\n                    </Button>\r\n                    {Object.values(this.state.chapterData).map((datas) => {\r\n                        return datas.pages.map((page, i) => {\r\n                            return (\r\n                                <Box key={i} className={classes.page}>\r\n                                    <Img loader={<CircularProgress size={30} />} src={page.pageImg} alt=\"page chapitre\" />\r\n                                </Box>\r\n                            );\r\n                        });\r\n                    })}\r\n                </Box>\r\n                <ScrollTop>\r\n                    <Fab size=\"medium\" aria-label=\"scroll back to top\">\r\n                        <KeyboardArrowUpIcon />\r\n                    </Fab>\r\n                </ScrollTop>\r\n            </Head>\r\n        );\r\n    }\r\n}\r\nMangaReadChapter.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\nexport default withStyles(styles)(withFirebase(MangaReadChapter));\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { compose } from \"recompose\";\r\nimport { withFirebase } from \"../../config/Firebase\";\r\nimport { withAuthorization } from \"../../components/Session\";\r\nimport Head from \"./../../components/layouts/Head\";\r\nimport * as ROLES from \"../../constants/roles\";\r\n\r\n//material ui\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\r\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\n\r\nconst styles = {\r\n    collapse: {\r\n        width: \"auto\"\r\n    },\r\n    collapsedItem: {\r\n        paddingLeft: \"70px\"\r\n    },\r\n    deleteIcon: {\r\n        position: \"absolute\",\r\n        right: \"10px\"\r\n    }\r\n};\r\n\r\nclass DeleteData extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            mangas: {},\r\n            loading: true\r\n        };\r\n    }\r\n    displayChapters = (id) => {\r\n        //[id] => Faire apparaitre / disparaitre les chapitres du manga\r\n        this.setState({ [id]: !this.state[id] });\r\n    };\r\n\r\n    removeChapterImg = (chapterInfo) => {\r\n        const storage = this.props.firebase.storage;\r\n\r\n        return storage\r\n            .ref()\r\n            .child(`/${chapterInfo.mangaId}/${chapterInfo.chapter}/`)\r\n            .listAll()\r\n            .then((data) => {\r\n                data.items.forEach((fileRef) => {\r\n                    fileRef.delete();\r\n                });\r\n            });\r\n    };\r\n    removeMangaImg = (mangaId) => {\r\n        const storage = this.props.firebase.storage;\r\n\r\n        return storage\r\n            .ref()\r\n            .child(`/${mangaId}/`)\r\n            .listAll()\r\n            .then((data) => {\r\n                data.items.forEach((fileRef) => {\r\n                    fileRef.delete();\r\n                });\r\n            });\r\n    };\r\n\r\n    handleDeleteChapter = (chapterInfo) => {\r\n        const firestore = this.props.firebase.firestore;\r\n\r\n        firestore\r\n            .collection(\"chapters\")\r\n            .doc(chapterInfo.id)\r\n            .delete()\r\n            .then(() => {\r\n                this.removeChapterImg(chapterInfo);\r\n            })\r\n            .then(() => {\r\n                //[chapterInfo.id] => Faire disparaitre le chapitre après supression\r\n                this.setState({ [chapterInfo.id]: true });\r\n            });\r\n    };\r\n    handleDeleteManga = (mangaInfo, i) => {\r\n        const firestore = this.props.firebase.firestore;\r\n        firestore\r\n            .collection(\"chapters\")\r\n            .where(\"mangaId\", \"==\", mangaInfo.id)\r\n            .get()\r\n            .then((snapshot) => {\r\n                snapshot.forEach((doc) => {\r\n                    this.removeChapterImg(doc.data());\r\n                    doc.ref.delete();\r\n                });\r\n            })\r\n            .then(() => {\r\n                firestore\r\n                    .collection(\"mangas\")\r\n                    .doc(mangaInfo.id)\r\n                    .delete()\r\n                    .then(() => {\r\n                        this.removeMangaImg(mangaInfo.id);\r\n                    })\r\n                    .then(() => {\r\n                        firestore\r\n                            .collection(\"planning\")\r\n                            .doc(mangaInfo.id)\r\n                            .delete()\r\n                            .then(() => {\r\n                                //[i] => Faire disparaitre le manga / [mangaInfo.id] => Faire disparaitre les chapitres après supression\r\n                                this.setState({ [i]: !this.state[i], [mangaInfo.id]: false });\r\n                            });\r\n                    });\r\n            });\r\n    };\r\n    componentDidMount = () => {\r\n        const firestore = this.props.firebase.firestore;\r\n        let mangas = {};\r\n\r\n        firestore\r\n            .collection(\"mangas\")\r\n            .get()\r\n            .then((snapshot) => {\r\n                snapshot.forEach((doc) => {\r\n                    mangas[doc.id] = doc.data();\r\n                    mangas[doc.id].id = doc.id;\r\n                    mangas[doc.id].listChapter = [];\r\n                    return firestore\r\n                        .collection(\"chapters\")\r\n                        .orderBy(\"chapter\", \"desc\")\r\n                        .get()\r\n                        .then((snapshot) => {\r\n                            snapshot.forEach((doc) => {\r\n                                mangas[doc.data().mangaId].listChapter[doc.id] = doc.data();\r\n                                mangas[doc.data().mangaId].listChapter[doc.id].id = doc.id;\r\n                            });\r\n                            this.setState({ mangas: mangas, loading: false });\r\n                        });\r\n                });\r\n            });\r\n    };\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <Head pageMeta={{ title: \"Gestion des mangas | ScanNation France \" }}>\r\n                <Grid container className=\"main\">\r\n                    <Grid item md={12}>\r\n                        <Typography variant=\"h5\" component=\"h3\" className=\"titlePage\">\r\n                            Gestion des mangas\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item md={12} className=\"containerInfo\">\r\n                        {this.state.loading ? (\r\n                            <CircularProgress size={30} className=\"loadingInfo\" />\r\n                        ) : (\r\n                            Object.values(this.state.mangas).map((manga, i) => {\r\n                                return (\r\n                                    <Box key={i}>\r\n                                        {/* Collapse pour la suppression de manga */}\r\n                                        <Collapse in={!this.state[i]} timeout=\"auto\" unmountOnExit>\r\n                                            <Box className=\"newChapter\">\r\n                                                <Box className=\"newChapterImg\">\r\n                                                    <img src={manga.mangaImage} alt=\"\" />\r\n                                                </Box>\r\n                                                <Box>\r\n                                                    <Typography variant=\"body1\" component=\"p\">\r\n                                                        {manga.title}\r\n                                                    </Typography>\r\n                                                </Box>\r\n                                                <ListItem className={classes.collapse} button onClick={() => this.displayChapters(manga.id)}>\r\n                                                    {this.state[manga.id] ? <ExpandLess /> : <ExpandMore />}\r\n                                                </ListItem>\r\n                                                <IconButton\r\n                                                    className={classes.deleteIcon}\r\n                                                    component=\"span\"\r\n                                                    onClick={() => this.handleDeleteManga(manga, i)}\r\n                                                >\r\n                                                    <DeleteForeverIcon />\r\n                                                </IconButton>\r\n                                            </Box>\r\n                                        </Collapse>\r\n\r\n                                        {/* Collapse pour afficher / cacher les chapitres */}\r\n                                        <Collapse in={this.state[manga.id]} timeout=\"auto\" unmountOnExit className={classes.collapsedItem}>\r\n                                            {Object.values(manga.listChapter).map((list, index) => {\r\n                                                return (\r\n                                                    // Collapse pour la suppression de chapitre\r\n                                                    <Collapse in={!this.state[list.id]} key={index}>\r\n                                                        <Box className=\"newChapter\">\r\n                                                            <Box className=\"newChapterImg\">\r\n                                                                <img src={manga.mangaImage} alt=\"\" />\r\n                                                            </Box>\r\n                                                            <Box>\r\n                                                                <Typography variant=\"body1\" component=\"p\">\r\n                                                                    {list.title} {list.chapter}\r\n                                                                </Typography>\r\n                                                                <Typography variant=\"body1\" component=\"p\">\r\n                                                                    {list.titleChapter}\r\n                                                                </Typography>\r\n                                                            </Box>\r\n                                                            <IconButton\r\n                                                                className={classes.deleteIcon}\r\n                                                                component=\"span\"\r\n                                                                onClick={() => this.handleDeleteChapter(list)}\r\n                                                            >\r\n                                                                <DeleteForeverIcon />\r\n                                                            </IconButton>\r\n                                                        </Box>\r\n                                                    </Collapse>\r\n                                                );\r\n                                            })}\r\n                                        </Collapse>\r\n                                    </Box>\r\n                                );\r\n                            })\r\n                        )}\r\n                    </Grid>\r\n                </Grid>\r\n            </Head>\r\n        );\r\n    }\r\n}\r\n\r\nDeleteData.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\nconst condition = (authUser) => authUser && !!authUser.roles[ROLES.ADMIN];\r\n\r\nexport default compose(withStyles(styles), withAuthorization(condition), withFirebase)(DeleteData);\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport \"./App.css\";\r\n\r\n//routes\r\nimport * as ROUTES from \"./constants/routes\";\r\n\r\n//Components\r\nimport { withAuthentication } from \"./components/Session\";\r\nimport Navbar from \"./components/layouts/Navbar\";\r\nimport Home from \"./pages/Home\";\r\nimport Planning from \"./pages/Planning\";\r\nimport MangasList from \"./pages/MangasList\";\r\nimport SignIn from \"./components/auth/SignIn/\";\r\nimport SignUp from \"./components/auth/Signup\";\r\nimport PasswordForgetPage from \"./components/auth/PasswordForget\";\r\nimport AccountPage from \"./components/auth/Account\";\r\nimport AdminPage from \"./components/Admin\";\r\nimport UploadChapter from \"./pages/upload/UploadChapter\";\r\nimport UploadManga from \"./pages/upload/UploadManga\";\r\nimport UploadPlanning from \"./pages/upload/UploadPlanning\";\r\nimport UploadNews from \"./pages/upload/UploadNews\";\r\nimport MangaListChapters from \"./pages/MangaListChapters\";\r\nimport MangaReadChapter from \"./pages/MangaReadChapter\";\r\nimport DeleteData from \"./pages/delete/DeleteData\";\r\n\r\n// Material-ui\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nimport { HashRouter } from \"react-router-dom\";\r\n\r\nconst App = () => (\r\n    <HashRouter>\r\n        <Navbar />\r\n        <Container maxWidth=\"lg\">\r\n            <Switch>\r\n                <Route exact path={ROUTES.HOME} component={Home} />\r\n                <Route exact path={ROUTES.LIST_MANGAS} component={MangasList} />\r\n                <Route exact path={ROUTES.PLANNING} component={Planning} />\r\n                <Route exact path={ROUTES.SIGN_IN} component={SignIn} />\r\n                <Route exact path={ROUTES.SIGN_UP} component={SignUp} />\r\n                <Route exact path={ROUTES.PASSWORD_FORGET} component={PasswordForgetPage} />\r\n                <Route exact path={ROUTES.ACCOUNT} component={AccountPage} />\r\n                <Route exact path={ROUTES.ADMIN} component={AdminPage} />\r\n                <Route exact path={ROUTES.UPLOAD_CHAPTER} component={UploadChapter} />\r\n                <Route exact path={ROUTES.UPLOAD_MANGA} component={UploadManga} />\r\n                <Route exact path={ROUTES.UPLOAD_PLANNING} component={UploadPlanning} />\r\n                <Route exact path={ROUTES.UPLOAD_NEWS} component={UploadNews} />\r\n                <Route exact path={ROUTES.DELETE_DATA} component={DeleteData} />\r\n\r\n                <Route exact path={ROUTES.LIST_MANGA_CHAPTERS} component={MangaListChapters} />\r\n                <Route exact path={ROUTES.READ_MANGA_CHAPTER} component={MangaReadChapter} />\r\n            </Switch>\r\n        </Container>\r\n    </HashRouter>\r\n);\r\n\r\nexport default withAuthentication(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nimport Firebase, { FirebaseContext } from \"./config/Firebase\";\r\n\r\nReactDOM.render(\r\n    <FirebaseContext.Provider value={new Firebase()}>\r\n        <App />\r\n    </FirebaseContext.Provider>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.b64d5d72.png\";"],"sourceRoot":""}